{
  "openapi": "3.0.1",
  "info": {
    "title": "Next Staff App APIs",
    "description": "Staff App API design for Next Project",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://10.5.5.138:6000/api/"
    }
  ],
  "tags": [
    {
      "name": "login",
      "description": "Login and logout from the app"
    },
    {
      "name": "companies",
      "description": "companies"
    },
    {
      "name": "branches",
      "description": "Branches"
    },
    {
      "name": "tables",
      "description": "Restaurent tables"
    },
    {
      "name": "staffcalls",
      "description": "Staff calls"
    },
    {
      "name": "orders",
      "description": "orders"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Login to the app.",
        "description": "Login to the app.",
        "operationId": "login",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "properties": {
                  "userName": {
                    "type": "string",
                    "description": "User Name"
                  },
                  "password": {
                    "type": "string",
                    "description": "User Password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid userName or password",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/login/{token}": {
      "delete": {
        "tags": [
          "login"
        ],
        "summary": "Logout from the app",
        "description": "Logout from the app",
        "operationId": "logout",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token of the logged in user to remove",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "content": {}
          },
          "400": {
            "description": "Invalid token supplied",
            "content": {}
          },
          "404": {
            "description": "Token not found",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/companies/{id}/menus": {
      "get": {
        "tags": [
          "companies"
        ],
        "summary": "Get all menus by company id",
        "description": "Returns a list of menu.",
        "operationId": "menusByCompanyId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "companid to filter menus",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Menu"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/companies/{id}/foodCategories": {
      "get": {
        "tags": [
          "companies"
        ],
        "summary": "Get all food categories by company id",
        "description": "Returns a list of FoodCategory.",
        "operationId": "foodCategoryiesByCompanyId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "companid to filter food category",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FoodCategory"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/companies/{id}/foodItems": {
      "get": {
        "tags": [
          "companies"
        ],
        "summary": "Get all food items by company id",
        "description": "Returns a list of FoodItem.",
        "operationId": "foodItemsByCompanyId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "companid to filter food items",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FoodItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/companies/{id}/foodItemStocks": {
      "get": {
        "tags": [
          "companies"
        ],
        "summary": "Get all food item stocks by company id",
        "description": "Returns a list of FoodItemStock.",
        "operationId": "foodItemStocksByCompanyId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "companid to filter food item stocks",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FoodItemStock"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/companies/{id}/choiceCategories": {
      "get": {
        "tags": [
          "companies"
        ],
        "summary": "Get all choice category by company id",
        "description": "Returns a choice category.",
        "operationId": "choiceCategoryListByCompanyid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "companid to filter choice category",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChoiceCategory"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/companies/{id}/choiceItems": {
      "get": {
        "tags": [
          "companies"
        ],
        "summary": "Get all choice items by company id",
        "description": "Returns a list of choice items.",
        "operationId": "choiceItemsByCopanyId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "companid to filter choice items",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChoiceItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/companies/{id}/choiceItemStocks": {
      "get": {
        "tags": [
          "companies"
        ],
        "summary": "Get all choice item stocks by company id",
        "description": "Returns a list of choice item stocks.",
        "operationId": "choiceItemstocksByCopanyId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "companid to filter choice item stock",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChoiceItemStock"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/companies/{id}/choiceItemOptSlots": {
      "get": {
        "tags": [
          "companies"
        ],
        "summary": "Get all choice item opt slots by company id",
        "description": "Returns a list of choice item opt slots.",
        "operationId": "choiceItemOptSlotsByCopanyId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "companid to filter choice item opt slots",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChoiceItemOptSlot"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/companies/{id}/operationSlots": {
      "get": {
        "tags": [
          "companies"
        ],
        "summary": "Get all operation slots by company id",
        "description": "Returns a list of operation slots.",
        "operationId": "operationSlotsByCopanyId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "companid to filter operation slots",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OperationSlot"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/companies/{id}/itemDeliveryType": {
      "get": {
        "tags": [
          "companies"
        ],
        "summary": "Get all item delivery type by company id",
        "description": "Returns a list of ItemDeliveryType.",
        "operationId": "itemDeliveryTypeByCompanyId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "companid to filter item delivery type",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemDeliveryType"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/companies/{id}/payments": {
      "get": {
        "tags": [
          "companies"
        ],
        "summary": "Get all payment mehtod of the company",
        "description": "Returns a list of payment methods",
        "operationId": "paymenthMethodsByCompanyId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "companid to filter payment methods",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/companies/{id}/branches": {
      "get": {
        "tags": [
          "companies"
        ],
        "summary": "Get all branches by companId",
        "description": "Returns a list of branches. Filters can provided by address and name",
        "operationId": "getAllBranchesByCompanyId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "comapnyId to filter branches",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          },
          {
            "name": "address",
            "in": "query",
            "description": "branch address that need to be considered for filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Branch name contains value that need to be considered for filter",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Branch"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/branches/{id}/kitchens": {
      "get": {
        "tags": [
          "branches"
        ],
        "summary": "Get all kitchens by branchId",
        "description": "Returns a list of kitchens.",
        "operationId": "kitchensByBranchId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "branchId to filter branches",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Kitchen"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/branches/{id}/orders": {
      "get": {
        "tags": [
          "branches"
        ],
        "summary": "Get all orders by branchId",
        "description": "Returns a list of orders of the branch",
        "operationId": "ordersByBranchId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "branchId to filter orders",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Company id value that need to be considered for filter",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderStartDate",
            "in": "query",
            "description": "Order start date value that need to be considered for filter",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "orderEndDate",
            "in": "query",
            "description": "Order end date value that need to be considered for filter",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "kitchenId",
            "in": "query",
            "description": "Kitchen id value that need to be considered for filter",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status value that need to be considered for filter",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "404": {
            "description": "Branch not found",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/branches/{id}/tables": {
      "get": {
        "tags": [
          "branches"
        ],
        "summary": "Get all tables by branchId",
        "description": "Returns a list of restaurent table.",
        "operationId": "tablesByBranchId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "branchId to filter branches",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RestaurentTable"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/branches/{id}/staffs": {
      "get": {
        "tags": [
          "branches"
        ],
        "summary": "Get all staffs by branchId",
        "description": "Returns a list of staffs.",
        "operationId": "staffsByBranchId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "branchId to filter branches",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Staff"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/tables/{id}": {
      "get": {
        "tags": [
          "tables"
        ],
        "summary": "Get restaurent table by table id",
        "description": "Returns a RestaurentTable object",
        "operationId": "restaurentTableByRestaurentTableId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "restaurentTable id to find restaurentTable",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestaurentTable"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "tables"
        ],
        "summary": "Update restaurent table info",
        "operationId": "editRestaurentTable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "restaurent table id to find the restaurent table",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "RestaurentTable object that needs to be updated to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestaurentTable"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/tables/{code}/status": {
      "get": {
        "tags": [
          "tables"
        ],
        "summary": "Get restaurent table status by table code",
        "description": "Returns a Restaurent Table status",
        "operationId": "restaurentTableStatusByTableCode",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "table code to find the table",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestaurentTable"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "tables"
        ],
        "summary": "Update restaurent table status by table code",
        "operationId": "updateTableStatusByCode",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "restaurent table code to find the table",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "RestaurentTable Status code that needs to be updated to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestaurentTable"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/staffcalls": {
      "post": {
        "tags": [
          "staffcalls"
        ],
        "summary": "Create staffcall.",
        "description": "Create new staffcall.",
        "operationId": "createStaffCall",
        "requestBody": {
          "description": "StaffCall object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffCall"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffCall"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/staffcalls/{id}/receive": {
      "patch": {
        "tags": [
          "staffcalls"
        ],
        "summary": "Update staffcall receiver",
        "operationId": "editStaffCall",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "staffcall Id to find the staffcall",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "staffId who receives the call",
          "content": {
            "*/*": {
              "schema": {
                "properties": {
                  "receiverId": {
                    "type": "integer",
                    "description": "Staff ID"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffCall"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/orders": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Create order.",
        "description": "Create new order.",
        "operationId": "createOrder",
        "requestBody": {
          "description": "Order object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize access"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Get order by orderId",
        "description": "Returns a Order object",
        "operationId": "ordersByOrderId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "order id to find order",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "orders"
        ],
        "summary": "Update order info",
        "operationId": "editOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "order id to find the order",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Order object with changed property value only that needs to be updated to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "orders"
        ],
        "summary": "Delete order by id",
        "description": "Delete order by id",
        "operationId": "deleteOrderById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "order Id to find the order",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "content": {}
          },
          "400": {
            "description": "Invalid BranchId supplied",
            "content": {}
          },
          "404": {
            "description": "Order not found",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/orders/{id}/orderItems": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Create order items.",
        "description": "Create items.",
        "operationId": "createOrderItems",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "order id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Array of Order Item object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderItem"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize access"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/orders/{id}/itemChoices": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Create order item choices.",
        "description": "Create order item choices.",
        "operationId": "createOrderItemChoices",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "order id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Array of Order Choice Item Choices object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderItemChoice"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize access"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/orders/{id}/payment": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Create order payment.",
        "description": "Create order payment.",
        "operationId": "createOrderPayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "order id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Order Payment Object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderPayment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderPayment"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "LoginResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "UserName": {
            "type": "string"
          },
          "tableCode": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "Account": {
        "required": [
          "companyId",
          "firstName",
          "password",
          "userName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "firstName": {
            "type": "string",
            "example": "doggie"
          },
          "lastName": {
            "type": "string",
            "example": "lastd"
          },
          "address": {
            "type": "string",
            "example": "address"
          },
          "email": {
            "type": "string",
            "example": "email@example.com"
          },
          "phone": {
            "type": "string",
            "example": "12345678912"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "userName": {
            "type": "string",
            "example": "user-name"
          },
          "password": {
            "type": "string",
            "example": "password"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "kitchenId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Company": {
        "required": [
          "name",
          "address"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "allowableBranches": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Branch": {
        "required": [
          "name",
          "address",
          "companyId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Order": {
        "required": [
          "orderCustomerId",
          "branchId",
          "tableId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "orderStartTime": {
            "type": "string",
            "format": "date-time"
          },
          "orderEndTime": {
            "type": "string",
            "format": "date-time"
          },
          "orderCustomerId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "tax": {
            "type": "integer",
            "format": "int64"
          },
          "discount": {
            "type": "number"
          },
          "payable": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "kitchenId": {
            "type": "integer",
            "format": "int32"
          },
          "tableId": {
            "type": "integer",
            "format": "int32"
          },
          "orderBy": {
            "type": "integer",
            "format": "int32"
          },
          "specialInstruction": {
            "type": "string"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "OrderItem": {
        "required": [
          "orderCustomerId",
          "branchId",
          "tableId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "menuId": {
            "type": "integer",
            "format": "int32"
          },
          "footCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "footItemId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "integer"
          },
          "itemDeliveryTypeId": {
            "type": "integer"
          },
          "price": {
            "type": "number"
          },
          "tax": {
            "type": "number"
          },
          "discount": {
            "type": "number"
          },
          "payable": {
            "type": "number"
          },
          "specialInstruction": {
            "type": "string"
          }
        }
      },
      "OrderItemChoice": {
        "required": [
          "orderId",
          "orderItemId",
          "choiceItemId",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "orderItemId": {
            "type": "integer",
            "format": "int32"
          },
          "choiceItemId": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ItemDeliveryType": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "taxPercentage": {
            "type": "number"
          }
        }
      },
      "OrderPayment": {
        "required": [
          "orderId",
          "paymentId",
          "paymentAmount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentAmount": {
            "type": "number"
          },
          "status": {
            "type": "integer"
          }
        }
      },
      "OrderCustomer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "firstName": {
            "type": "string",
            "example": "doggie"
          },
          "lastName": {
            "type": "string",
            "example": "lastd"
          },
          "address": {
            "type": "string",
            "example": "address"
          },
          "email": {
            "type": "string",
            "example": "email@example.com"
          },
          "phone": {
            "type": "string",
            "example": "12345678912"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RestaurentTable": {
        "required": [
          "numberOfSeat",
          "companyId",
          "branchid",
          "tableNo",
          "tableCode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "noOfSeats": {
            "type": "integer"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "branchid": {
            "type": "integer",
            "format": "int64"
          },
          "tableNo": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "integer"
          },
          "tableCode": {
            "type": "string"
          }
        }
      },
      "StaffCall": {
        "required": [
          "companyId",
          "branchId",
          "tableId",
          "staffId",
          "callTime",
          "receiverStaffId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "tableId": {
            "type": "integer",
            "format": "int64"
          },
          "staffId": {
            "type": "integer",
            "format": "int64"
          },
          "callTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Kitchen": {
        "required": [
          "name",
          "companyId",
          "branchId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Staff": {
        "required": [
          "accountId",
          "branchId",
          "kitchenId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "accountId": {
            "type": "integer",
            "format": "int64"
          },
          "address": {
            "type": "string"
          },
          "dob": {
            "type": "string",
            "format": "date-time"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "kitchenId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Payment": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Menu": {
        "required": [
          "name",
          "companyId",
          "branchId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "isPackaged": {
            "type": "boolean"
          },
          "packagePrice": {
            "type": "number",
            "format": "double"
          },
          "isTimeBound": {
            "type": "boolean"
          },
          "timeBoundDuration": {
            "type": "number",
            "format": "float"
          },
          "packageDiscountPercentage": {
            "type": "number",
            "format": "float"
          },
          "lastTimeToOrder": {
            "type": "number",
            "format": "float"
          },
          "reminderTime": {
            "type": "number",
            "format": "float"
          },
          "isPublished": {
            "type": "boolean"
          },
          "menuType": {
            "type": "number"
          }
        }
      },
      "FoodCategory": {
        "required": [
          "name",
          "branchId",
          "companyId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "parentId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "FoodItem": {
        "required": [
          "name",
          "footCategoryId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "ingredients": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "properties": {
            "type": "string"
          },
          "prepare_duration": {
            "type": "string"
          },
          "nutritionInfo": {
            "type": "string"
          },
          "alergyInfo": {
            "type": "string"
          },
          "isVeg": {
            "type": "boolean"
          },
          "isHalal": {
            "type": "boolean"
          },
          "isAlcoholAdded": {
            "type": "boolean"
          },
          "isKidItem": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "isAllYouEat": {
            "type": "boolean"
          },
          "footCategoryId": {
            "type": "integer",
            "format": "int64"
          },
          "printableName": {
            "type": "string"
          }
        }
      },
      "FoodItemStock": {
        "required": [
          "foodItemId",
          "currentStock",
          "branchId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "foodItemId": {
            "type": "integer",
            "format": "int64"
          },
          "currentStock": {
            "type": "number"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ChoiceItem": {
        "required": [
          "name",
          "choiceCategory"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "choiceCategoryId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ChoiceCategory": {
        "required": [
          "name",
          "companyId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "parentId": {
            "type": "integer",
            "format": "int64"
          },
          "isMultiValued": {
            "type": "boolean"
          },
          "isRequired": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ChoiceItemStock": {
        "required": [
          "name",
          "choiceItemId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "choiceItemId": {
            "type": "integer",
            "format": "int32"
          },
          "currentStock": {
            "type": "number"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ChoiceItemOptSlot": {
        "required": [
          "menuid",
          "menuItemId",
          "choicesCategoryId",
          "choicesItemId",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "menuId": {
            "type": "integer",
            "format": "int32"
          },
          "menuItemId": {
            "type": "integer",
            "format": "int32"
          },
          "choicesCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "choicesItemId": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "isDefaultSelected": {
            "type": "boolean"
          },
          "optSlotId": {
            "type": "integer",
            "format": "in32"
          }
        }
      },
      "OperationSlot": {
        "required": [
          "name",
          "startTime",
          "endTime",
          "companyId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ExceptionResponse": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {}
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}