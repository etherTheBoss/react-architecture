{
  "openapi": "3.0.1",
  "info": {
    "title": "Next User Management APIs",
    "description": "User management API design for Next Project",
    "termsOfService": "#",
    "contact": {
      "email": "info@ixorasolution.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "https://10.5.5.138:6000/api/"
    }
  ],
  "tags": [
    {
      "name": "accounts",
      "description": "Everything about user accounts"
    },
    {
      "name": "roles",
      "description": "Everything about roles and role privileges"
    }
  ],
  "paths": {
    "/accounts": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Get all accounts.",
        "description": "Filter value can provided using query parameters",
        "operationId": "accounts",
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Company id value that need to be considered for filter",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Branch id value that need to be considered for filter",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "kitchenId",
            "in": "query",
            "description": "Kitchen id value that need to be considered for filter",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "accounts"
        ],
        "summary": "Add a new user account to the store",
        "operationId": "addAccount",
        "requestBody": {
          "description": "Account object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/accounts/{id}": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Find account by ID",
        "description": "Returns a single account",
        "operationId": "accountById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "404": {
            "description": "Account not found",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "accounts"
        ],
        "summary": "Delete account by ID",
        "description": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
        "operationId": "deleteAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the account that needs to be deleted",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "content": {}
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Account not found",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "accounts"
        ],
        "summary": "Update user account info to the store",
        "operationId": "editAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Account object with only changed properties that needs to be updated to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/accounts/{id}/roles": {
      "put": {
        "tags": [
          "accounts"
        ],
        "summary": "Edit user account's roles",
        "description": "Update user roles",
        "operationId": "updateUserRoles",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account to find",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "List of role IDs to assign",
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          },
          "400": {
            "description": "Invalid request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-codegen-request-body-name": "body"
      },
      "post": {
        "tags": [
          "accounts"
        ],
        "summary": "Assign user account's roles",
        "description": "Assign roles for user",
        "operationId": "assignUserRoles",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account to find",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "List of role IDs to assign",
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/accounts/{aid}/roles/{rid}": {
      "delete": {
        "tags": [
          "accounts"
        ],
        "summary": "Delete user role by ID",
        "description": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
        "operationId": "deleteUserRole",
        "parameters": [
          {
            "name": "aid",
            "in": "path",
            "description": "ID of the account to find",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "rid",
            "in": "path",
            "description": "ID of the role to delete",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "content": {}
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Account not found",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "Get all roles.",
        "description": "Filter value can provided using query parameters",
        "operationId": "roles",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "User id value that need to be considered for filter",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "privilegeId",
            "in": "query",
            "description": "Privilege id value that need to be considered for filter",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "roles"
        ],
        "summary": "Add a new role to the store",
        "operationId": "addRole",
        "requestBody": {
          "description": "Role object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/roles/{id}": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "Find role by ID",
        "description": "Returns a single role",
        "operationId": "roleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of role to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "404": {
            "description": "Account not found",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "roles"
        ],
        "summary": "Delete role by ID",
        "description": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
        "operationId": "deleteRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the role that needs to be deleted",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "content": {}
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Account not found",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/roles/{id}/privileges": {
      "put": {
        "tags": [
          "roles"
        ],
        "summary": "Edit role privileges",
        "description": "Update role privileges",
        "operationId": "updateRolePrivileges",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of role to find",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "List of privilege IDs to assign",
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          },
          "400": {
            "description": "Invalid request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-codegen-request-body-name": "body"
      },
      "post": {
        "tags": [
          "roles"
        ],
        "summary": "Assign role's privileges",
        "description": "Assign privileges for role",
        "operationId": "assignRolePrivileges",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of role to find",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "List of privilege IDs to assign",
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized access",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    }
  },
  "components": {
    "schemas": {
      "Account": {
        "required": [
          "companyId",
          "firstName",
          "password",
          "userName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "firstName": {
            "type": "string",
            "example": "doggie"
          },
          "lastName": {
            "type": "string",
            "example": "lastd"
          },
          "address": {
            "type": "string",
            "example": "address"
          },
          "email": {
            "type": "string",
            "example": "email@example.com"
          },
          "phone": {
            "type": "string",
            "example": "12345678912"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "userName": {
            "type": "string",
            "example": "user-name"
          },
          "password": {
            "type": "string",
            "example": "password"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "kitchenId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Role": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "example": "Company Admin"
          },
          "description": {
            "type": "string",
            "example": "Role for company/restaurent admin"
          }
        }
      },
      "Privilege": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "example": "Kitchen App"
          }
        }
      },
      "ExceptionResponse": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {}
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}