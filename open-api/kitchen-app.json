{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Kitechen App"
  },
  "host": "localhost",
  "basePath": "/v1",
  "tags": [
    {
      "name": "order",
      "description": "order apis"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/orders": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Get all orders",
        "description": "Get all orders",
        "operationId": "getAllOrders",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/order"
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      },
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Update an existing order",
        "description": "",
        "operationId": "updateOrder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "order object that need to updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/order"
            }
          },
          "400": {
            "description": "Invalid Order"
          }
        }
      }
    },
    "/order/{orderId}": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Get an order by ID",
        "description": "Get an order by ID",
        "operationId": "getOrderById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of order that needs to be fetched",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/order"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      },
      "delete": {
        "tags": [
          "order"
        ],
        "summary": "Delete an order by ID",
        "description": "Delete an order by ID",
        "operationId": "deleteOrders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of the order that needs to be deleted",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      },
      "patch": {
        "tags": [
          "order"
        ],
        "summary": "Update an order by ID",
        "description": "Delete an order by ID",
        "operationId": "patchOrder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of the order that needs to be deleted",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/order/{orderId}/order_items": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Get order_items of an order",
        "description": "Get an order by ID",
        "operationId": "getOrderItemsById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of order that needs to be fetched",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/order_item"
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      },
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Update order items of an order",
        "description": "update order items of an order",
        "operationId": "patchOrderitems",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of the order that needs to be deleted",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "order object that need to updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/order_item"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/order/{orderId}/order_items/{orderItemId}": {
      "patch": {
        "tags": [
          "order"
        ],
        "summary": "Update an order item of an order",
        "description": "",
        "operationId": "updateOrderItems",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of order to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "orderItemId",
            "in": "path",
            "description": "ID of order item to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "order object that need to updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/order_item"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/order_item"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "order"
        ],
        "summary": "delete an order item of an order",
        "description": "",
        "operationId": "deleteOrderItems",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of order",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "orderItemId",
            "in": "path",
            "description": "ID of order item",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/orders/findByStatus": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Finds Orders by status",
        "description": "Finds Orders by status",
        "operationId": "findOrdersByStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "processing",
                "pending",
                "delivered"
              ],
              "default": "available"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/order"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/order/{orderId}/order_items/findByStatus": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Finds Order items by status",
        "description": "Finds Order items by status\"",
        "operationId": "findOrderItemssByStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of Order",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "new",
                "available",
                "delivered"
              ],
              "default": "available"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/order_item"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "order_start_time": {
          "type": "string"
        },
        "order_end_time": {
          "type": "string"
        },
        "branch_id": {
          "type": "integer",
          "format": "int64"
        },
        "order_customer_id": {
          "type": "integer",
          "format": "int64"
        },
        "kitchen_id": {
          "type": "integer",
          "format": "int64"
        },
        "table_id": {
          "type": "integer",
          "format": "int64"
        },
        "user_id": {
          "type": "integer",
          "format": "int64"
        },
        "order_by": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "number"
        },
        "tax": {
          "type": "integer",
          "format": "int32"
        },
        "discount": {
          "type": "integer",
          "format": "int32"
        },
        "payable": {
          "type": "number"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        },
        "special_instruction": {
          "type": "string"
        }
      },
      "xml": {
        "name": "order"
      }
    },
    "order_item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "order_id": {
          "type": "integer",
          "format": "int64"
        },
        "menu_id": {
          "type": "integer",
          "format": "int64"
        },
        "food_catefory_id": {
          "type": "integer",
          "format": "int64"
        },
        "food_item_id": {
          "type": "integer",
          "format": "int64"
        },
        "item_delivery_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer"
        },
        "price": {
          "type": "number"
        },
        "discount": {
          "type": "integer",
          "format": "int32"
        },
        "tax": {
          "type": "integer",
          "format": "int32"
        },
        "payable": {
          "type": "number"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        },
        "special_instruction": {
          "type": "string"
        }
      },
      "xml": {
        "name": "order_item"
      }
    },
    "order_item_choices": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "order_id": {
          "type": "integer",
          "format": "int64"
        },
        "order_item_id": {
          "type": "integer",
          "format": "int64"
        },
        "choices_item_id": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer"
        },
        "price": {
          "type": "number"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        }
      },
      "xml": {
        "name": "order_item_choices"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}